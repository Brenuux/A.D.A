[gd_scene load_steps=7 format=3 uid="uid://bd2r5s05kv5uh"]

[ext_resource type="Texture2D" uid="uid://grtfiw4kn0l8" path="res://character/assets/player.png" id="2_fweo4"]

[sub_resource type="GDScript" id="GDScript_qesar"]
script/source = "extends CharacterBody2D

#variáveis
@export_category(\"Variables\")
@export var _move_speed: float = 64.0

#aceleração e desaceleração do personagem
@export var _friction: float = 0.2
@export var _acceleration: float = 0.4

#função chamada a cada frame de execução do projeto
func _physics_process(_delta: float) -> void:
	_move()
	move_and_slide()

func _move() -> void:
	#armazenamento da direção de movimento do personagem
	var _direction : Vector2 = Vector2(
		Input.get_axis(\"move_left\", \"move_right\"),
		Input.get_axis(\"move_up\", \"move_down\")
	)
	#velocidade de movimento
	if _direction != Vector2.ZERO:
		velocity.x = lerp(velocity.x, _direction.normalized().x * _move_speed, _acceleration)
		velocity.y = lerp(velocity.y, _direction.normalized().y * _move_speed, _acceleration)
		return
		
	velocity.x = lerp(velocity.x, _direction.normalized().x * _move_speed, _friction)
	velocity.y = lerp(velocity.y, _direction.normalized().y * _move_speed, _friction)


	velocity = _direction.normalized() * _move_speed
	#permite movimento em todas as direções
	move_and_slide()
	
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_h6m2u"]
size = Vector2(10, 3)

[sub_resource type="Animation" id="Animation_jblsy"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-0.5, -17)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_7wiha"]
resource_name = "indle_down"
length = 0.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 3, 5]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-0.5, -17)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hyvt4"]
_data = {
"RESET": SubResource("Animation_jblsy"),
"indle_down": SubResource("Animation_7wiha")
}

[node name="Character" type="CharacterBody2D"]
script = SubResource("GDScript_qesar")

[node name="Texture" type="Sprite2D" parent="."]
position = Vector2(-0.5, -17)
texture = ExtResource("2_fweo4")
hframes = 6
vframes = 10

[node name="Collision" type="CollisionShape2D" parent="."]
show_behind_parent = true
position = Vector2(0, -0.5)
shape = SubResource("RectangleShape2D_h6m2u")

[node name="Animation" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_hyvt4")
}
